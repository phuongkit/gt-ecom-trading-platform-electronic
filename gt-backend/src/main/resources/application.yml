spring:
#  datasource:
#    url: jdbc:mysql://us-cdbr-east-06.cleardb.net/heroku_758d21ca1cf3460?createDatabaseIfNotExist=true&reconnect=true
#    username: b0a1965d534060
#    password: ef7e3227
#  datasource:
#    url: jdbc:mysql://us-cdbr-east-06.cleardb.net/heroku_2f2cbfeabf35e63?reconnect=true&createDatabaseIfNotExist=true
#    username: bb43f8df33cea7
#    password: 9be007c8
#  datasource:
#    url: jdbc:mysql://usy6rlaimsbfwton:aGpBaW0ZLfSq6dJbmGCG@bc9tzzvmmtegmyuawwro-mysql.services.clever-cloud.com:3306/bc9tzzvmmtegmyuawwro?reconnect=true&createDatabaseIfNotExist=true
#    username: usy6rlaimsbfwton
#    password: aGpBaW0ZLfSq6dJbmGCG
  datasource:
    url: jdbc:mysql://localhost:3306/gt_ecommerce?createDatabaseIfNotExist=true
    username: root
    password: 12345
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: true
    properties:
      hibernate:
        show_sql: false
        format_sql: false
  mail:
    host: smtp.gmail.com
    port: 587
    username: your email address from which you want to send mail to logged in person.
    password: your email password
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  main:
    allow-circular-references: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  servlet:
    multipart:
      max-file-size: 128MB
      max-request-size: 128MB
  session:
    store-type: jdbc
    jdbc:
      initialize-schema: always
    timeout: 900
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 867619584300-kk1cg980vlctrv1l6vj0b58vopqc3sl0.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 952881962336925
            clientSecret: c52cf96a10a67d18b5fa9e12834544e9
            #            clientId: 664290098492336
            #            clientSecret: 470013abd20af14a58e437768a8eda67
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: d3e47fc2ddd966fa4352
            clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
#        provider:
#          facebook:
#            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
#            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
#            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: abcdefghijklmnOPQRSTUVWXYZ
    tokenExpirationMs: 864000000
    tokenRefreshExpirationDateMs: 9000000
  #  cors:
  #    allowedOrigins: http://localhost:3000,http://localhost:8080
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:5000
      - https://gt-ecom-trading-platform-electronic.vercel.app
  shop:
    percent: 0.05
    timeRangeCheckBlackProductMs: 2419200000 # 604800000 1Week
    timeRangeSessionMs: 12096000000 # 5 month
    minSentiment: 2 #500
    minNegativePercent: 90 #70
  payment:
    paypal:
      mode: sandbox
      client:
        app: AZUnb_W8gT-cVGIyD67y4FIzsVumKqlIDuiOFSHSjZMW-P58UxOdIEaptl8fZLKHuTWTEpjquPQs7PAr
        secret: EJcAGiQZUZ15Yyk3RNClNsdyEWtj8U4YnM8piVjRk0l5ZQ0pMml6Se9HwgywhRD0gKu3Cuv1Nmx1wZKl
    vnpay:
      vnpTmnCode: 3Q1HQN3X
      vnpHashSecret: JCGRXJXTWMHKECPGCNZOQTOBKCVNZTYH

server:
  port: 8080
#  ssl:
#    # The alias mapped to the certificate
#    key-alias: gt-ecom
#    # The path to the keystore containing the certificate
#    key-store: classpath:keystore/gt-ecom.p12
#    # The format used for the keystore. It could be set to JKS in case it is a JKS file
#    key-store-type: PKCS12
#    # The password used to generate the certificate
#    key-store-password: demo123321
#    enabled: true
  servlet:
    session:
      tracking-modes: cookie

trust:
  store: classpath:keystore/gt-ecom.p12
  #trust store location
  #trust store password
  password: demo123321

ghn:
  shopId: 885
  token: 1a54568c-4713-11ed-8a70-52fa25d1292f
  address:
    district:
      thu-duc: 3695
    ward:
      truong-tho: 90746
  product:
    weight: 5000
    length: 30
    width: 30
    height: 50